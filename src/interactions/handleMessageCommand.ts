import { ChatInputCommandInteraction, EmbedBuilder } from 'discord.js';

import Admin from '../api/models/Admin';
import Team from '../api/models/Team';
import logger from '../logger';

export async function handleMessageCommand(
  interaction: ChatInputCommandInteraction,
) {
  const isAdmin = await Admin.findOne({ userId: interaction.user.id });
  if (!isAdmin) {
    await interaction.reply({
      content: '–¶—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤.',
      ephemeral: true,
    });
    return;
  }

  const teamId = interaction.options.getString('team_id');
  const message = interaction.options.getString('message');

  if (!teamId || !message) {
    await interaction.reply({
      content: '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å ID –∫–æ–º–∞–Ω–¥–∏ —Ç–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.',
      ephemeral: true,
    });
    return;
  }

  const team = await Team.findOne({ teamId });
  if (!team) {
    await interaction.reply({
      content: '–ö–æ–º–∞–Ω–¥—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.',
      ephemeral: true,
    });
    return;
  }

  const embed = new EmbedBuilder()
    .setColor('#FF9900')
    .setTitle(`üì¢ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ ${teamId}`)
    .setDescription(message)
    .addFields(
      { name: '–í—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞', value: interaction.user.tag },
      {
        name: '–ß–∞—Å –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è',
        value: new Date().toLocaleString('uk-UA', { timeZone: 'Europe/Kiev' }),
      },
    )
    .setFooter({ text: '–¶–µ –æ—Ñ—ñ—Ü—ñ–π–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó —Å–µ—Ä–≤–µ—Ä–∞.' });

  for (const player of [...team.players, ...team.reserve]) {
    try {
      const user = await interaction.client.users.fetch(player.id);
      await user.send({ embeds: [embed] });
    } catch (error) {
      logger.error(`Failed to send message to user ${player.id}: ${error}`);
    }
  }

  try {
    const channel = await interaction.client.channels.fetch(team.channelId);
    if (channel?.isTextBased()) {
      await channel.send({ embeds: [embed] });
    }
  } catch (error) {
    logger.error(
      `Failed to send message to team channel ${team.channelId}: ${error}`,
    );
  }

  await interaction.reply({
    content: `–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ–º–∞–Ω–¥—ñ ${teamId}.`,
    ephemeral: true,
  });
  logger.info(`Admin ${interaction.user.id} sent message to team ${teamId}`);
}
